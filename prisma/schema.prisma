// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            Int       @id @default(autoincrement())
  uid           String    @default(cuid())
  name          String
  username      String?   @unique
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  deletedAt     DateTime? @map(name: "deleted_at")

  accounts  Account[]
  bookmarks Bookmark[]
  groups    Group[]

  @@unique([uid])
}

model Bookmark {
  id          String  @id @default(cuid())
  title       String
  description String?
  url         String
  image       String?

  groupId   String
  groupSlug String
  group     Group[]

  userId String
  user   User   @relation(fields: [userId], references: [uid])

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@index([groupId, groupSlug, userId])
}

model Group {
  id   String @id @default(cuid())
  name String
  slug String @unique

  userId String
  user   User   @relation(fields: [userId], references: [uid])

  bookmarks Bookmark[]

  @@unique([id, slug])
  @@index([userId, slug])
}
